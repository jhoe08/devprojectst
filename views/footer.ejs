    <%- include('scripts') -%>
    
    <script>
      // new DataTable.datetime('D MMM YYYY');

      const transactions = $("#transactions-datatables").DataTable({
        "order": [[0, 'desc']],
        columnDefs: [{
            render: (data, type, row) => '<div><span data-head="Classification" class="badge badge-count mr-3">' + row[9] + '</span><span data-head="Banner"  class="badge badge-info">' + row[8] + '</span></div><div class="mb-0">'+ data +'</div><div data-head="Transaction Codes">' + (stringToArray(row[7], item => { return `<span class="badge badge-success">${item}</span>` })) + '</div>',
            targets: 1
          }, {
            render: (data, type, row) => `${data} <br><span data-head="Division" class="badge badge-warning">${row[3]}<span>`,
            targets: 2
          }, {
            render: $.fn.dataTable.render.number(',', '.', 2, 'â‚±'),
            targets: 5
          }, { visible: false, targets: [3,7,8,9] }
        ],
        responsive: true,
        initComplete: function () {
          this.api()
          // .columns()
          // .every(function () {
          //   var column = this;
          //   var select = $('<select class="form-select"><option value=""></option></select>')
          //     .appendTo($(column.footer()).empty())
          //     .on("change", function () {
          //       var val = $.fn.dataTable.util.escapeRegex($(this).val());

          //       column
          //         .search(val ? "^" + val + "$" : "", true, false)
          //         .draw();
          //     });

          //   column
          //     .data()
          //     .unique()
          //     .sort()
          //     .each(function (d, j) {
          //       select.append(
          //         '<option value="' + d + '">' + d + "</option>"
          //       );
          //     });
          // });
        }, 
      })
      const employeesHiddenColumns = []
      // const employeesHiddenColumns = [6,7,] 
      let employees = $("#employees").DataTable({
        
        layout: {
          topStart: {
            buttons: ['colvis']
          }
        },  
        "order": [[0, 'asc']],
        columnDefs: [{
            render: (data, type, row) => `<span class="badge badge-success"></span>${data}`,
            targets: 1
          },{ visible: false, targets: employeesHiddenColumns }],
        // rowDefs:[{ visible: false, targets: [3, 4, 5] }],
        responsive: true,
        initComplete: function () {
          this.api()
          .columns()
          .every(function () {
            var column = this;
            var select = $('<select class="form-select"><option value=""></option></select>')
              .appendTo($(column.footer()).empty())
              .on("change", function () {
                var val = $.fn.dataTable.util.escapeRegex($(this).val());

                column
                  .search(val ? "^" + val + "$" : "", true, false)
                  .draw();
              });

            column
              .data()
              .unique()
              .sort()
              .each(function (d, j) {
                select.append(
                  '<option value="' + d + '">' + d + "</option>"
                );
              });
          });
        },
      })
      // employees.rows().every(function() {
      //   var data = this.data();
      //   if ([4, 6, 14].includes(data[0])) {  // Hide rows where position is 'Accountant'
      //       this.nodes().to$().hide();
      //   }
      // });


      const transactionsIDs = $("#basic-datatables").DataTable()

      function addNewRow(data) {
        // alert(data)
        console.log(data)
        const { approved_budget, bid_notice_title, product_id } = data[0]
        const newRowData = [
          product_id,           // Product ID
          bid_notice_title,     // Notice Title
          approved_budget,      // Approved Budget
        ];
        console.log('asdadadasdasdasdadad', newRowData)
        transactionsIDs.row.add(newRowData).draw();
      }

      document.querySelectorAll('.toggle-vis').forEach((el) => {
        el.addEventListener('click', function (e) {
          // e.preventDefault();

          let columnIdx = e.target.getAttribute('data-column');
          let column = table.column(columnIdx);

          // Toggle the visibility
          column.visible(!column.visible());
        });
      });

      const btn = document.getElementById('manageBtn')
      if(btn) {
        btn.addEventListener('click', function (e) {
        const tableId = e.target.getAttribute('data-component')
        let columnIdx = e.target.getAttribute('data-column');
        console.log(tableId)
        if ( tableId ) {
          let column = ''
            if (tableId == 'employees') {
              column = employees.column(columnIdx);
            } else if (tableId == 'transactions') {
              column = transactions.column(columnIdx);
            }
            column.visible(!column.visible());
          }
        })
      }
      
      $("#lineChart").sparkline([102, 109, 120, 99, 110, 105, 115], {
        type: "line",
        height: "70",
        width: "100%",
        lineWidth: "2",
        lineColor: "#177dff",
        fillColor: "rgba(23, 125, 255, 0.14)",
      });

      $("#lineChart2").sparkline([99, 125, 122, 105, 110, 124, 115], {
        type: "line",
        height: "70",
        width: "100%",
        lineWidth: "2",
        lineColor: "#f3545d",
        fillColor: "rgba(243, 84, 93, .14)",
      });

      $("#lineChart3").sparkline([105, 103, 123, 100, 95, 105, 115], {
        type: "line",
        height: "70",
        width: "100%",
        lineWidth: "2",
        lineColor: "#ffa534",
        fillColor: "rgba(255, 165, 52, .14)",
      });

    </script>
  </body>
</html>
